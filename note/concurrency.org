#+title: concurrency

* (1983) (stephen d. brookes) a model for communicating sequential processes

*** Chapter 1: A Domain of Processes

*** Chapter 2: Process operations

*** Chapter 3: Implementations

*** Chapter 4: Relationship with Milner's CCS

*** Chapter 5: A proof system for CSP

*** Chapter 6: Testing processes

*** Chapter 7: Some examples

*** Chapter 8: Operational semantics

*** Conclusions

* (1997) (a.w. roscoe) the theory and practice of concurrency

* (2008) (allen b. downey) the little book of semaphores

* (2014) (paul butcher) seven concurrency models in seven weeks

*** intro

    - shared-memory (clojure) vs distributed-memory (erlang)

*** threads and locks

***** 1: mutual exclusion and memory models

***** 2: beyond intrinsic locks

***** 3: on the shoulders of giants

*** functional programming

***** [note]

      - 之前說過 一個常識是
        在電子計算機裏
        所有的計算都是由 改變計算機內存的狀態 來完成的

      - 現在看來
        如果想要 concurrency 與 parallelism
        就要抽象掉個常識

***** future and promise

      - x -
        promise 類似於 sequent 中的不定元

*** the clojure way

***** atom and STM -- software transactional memory

*** actors

***** intro

      - functional programming, avoids mutable state and share states
        actor programming, retains mutable state but avoids sharing states

***** [note]

      - x -
        傳遞信息的時候 symbol 這個數據結構如何處理 ?
        注意我們的 module system 是依賴這個數據結構的

***** 1: messages and mailboxes

      - a station handle messages sequentially.

      - when receiving messages,
        processes act asynchronously.

      - The video of
        Erik Meijer and Clemens Szyperski
        talking to Carl Hewitt
        about the actor model
        at Lang.NEXT 2012

***** 2: error handling and resilience

      - separating error handling out
        into a separate supervisor process.

      - linking processes

*** communicating sequential processes

***** process algebra

      - Primitives
        - Events
        - Primitive processes
      - Algebraic operators
        - Prefix
        - Deterministic Choice
        - Nondeterministic Choice
        - Interleaving
        - Interface Parallel
        - Hiding

*** data parallelism

*** the lambda architecture

* (2005) (howard bowman and rodolfo gomez) concurrency theory -- calculi and automata for modelling untimed and timed concurrent systems
