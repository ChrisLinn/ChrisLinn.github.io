#+title: xml

* [note]

* (1990) (eric van herwijnen) practical-sgml

*** [question]

    - What is DTD (Document Type Definition) ?
      Is it formal grammar of the parse-tree ?

    - people used SGML to write books in the past ?
      how are text processing
      and book publishing done nowadays ?

*** intro

    - SGML, the Standard Generalized Markup Language,
      became an ISO standard in 1986.

    - This ISO standard explains
      how documents may be split into
      a part containing the text
      and a part describing its structure
      without reference to a particular text processing system.

    - SGML conforming documents can be interchanged and processed
      on many different systems in many different ways.
      Programs can analyse SGML texts
      because their structure is clearly indicated.
      Hence computers can manage large amounts of complex data
      and provide easier access to this data.

    - applications
      CALS -- (Computer-aided Acquisition and Logistics Support)
      EDI -- (Electronic Data Interchange)
      - which is not an SGML application
        but which could profit from becoming one

** 1.1 A brief history of SGML

    - To get a feeling for what markup is,
      consider the traditional processing of texts
      arriving at a publisher, ready to be printed.

    - The copy-editor annotates manuscripts with instructions
      to the type-setter concerning layout, fonts, spacing,
      indentation and so on.
      These hand written instructions
      are traditionally called *markup*.

* (1998) (1988) (peter flynn) understanding-sgml-and-xml-tools

*** [note]

    - this book give a overview of xml tools
      such an overview can be used
      to provide application ideas for programmers

    - maybe we can read this book like we are "product manager"s

    - user story is indeed important

      - He (the author) provides a guide
        to the labyrinth of SGML and XML tools,
        organized carefully in the way many users need it:
        in terms of the life-cycle of their documents.

        he presents various systems' distinctives:
        what is it that stands out in product X,
        and why might I use it?

        These distinctives often reflect
        the fundamental approach of each system,
        which is much more stable
        than the feature details of a given release.
