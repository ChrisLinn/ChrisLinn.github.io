* learn more about prolog

  - clause-and-effect

* clean ref

  - lambda
    term re-writing
    graph re-writing

  - VM for graph re-writing

* depentent type for minikanren

  - new namespace

  - new syntax

* cicada vm in coffee & js

  - 以 recursive-combinator 爲 main-lib

  - 新的 unification 算法
    用來實現 pattern match 和 type check

  - 注意
    這裏我只需要 unification
    所以可能不需要用 monad 來處理 minikanren 一樣的 goal

  - 注意處理 scope 的方式
    是把 scope 當作參數來傳遞
    而不是使用全局變元

  - 只實現主要想法
    放棄
    每個 js 函數加上類型 都能被當作 primitive-function
    這個性狀
    這次把 primitive-function 限制在純粹的 符號演算 領域

  - 用 recursive-combinator 來實現簡單的 parser

  - 主要想法是 則式演算

* to mock a mocking bird

  - 給 recursive-combinator 寫一些文檔和例子

* 漢字的結構化編碼

* org-mode parser

* build system for things do not have good build system

* sa & electron & GUI design

  - really parse org-mode
    to be able to tangle the code to
    1. with or without test
    2. with or without export
    3. to include file or code block
       for example header file for js code
       to require a lot of functions from a module

  - to play with DOM

* prolog

* the little prover

* idris
